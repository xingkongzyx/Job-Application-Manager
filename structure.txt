! 因为后端使用的是 ES6 module, 所以 import的语法是与前端不同的, 导入 module 时必须要加上 js 后缀
Auth Controller: register, login, updateUser
=> authRouter
    ==> router.route('/register').post(register);
    ==> router.route('/login').post(login);
    ==> router.route('/updateUser').patch(updateUser);
app.use('/api/v1/auth', authRouter);


Jobs Controller: createJob, deleteJob, getAllJobs, updateJob, showStats
=> jobsRouter
    ==> router.route('/').post(createJob).get(getAllJobs);
    ==> // place before :id, 防止永远无法到达 ":id"
    ==> router.route('/stats').get(showStats);
    ==> router.route('/:id').delete(deleteJob).patch(updateJob);
app.use('/api/v1/jobs', jobsRouter);


User model, collection name is User
=> contains: name, email, password, lastName, location
=> 对于 password, 我们不希望将他发送到 frontend, 所以添加了 select: false. 
=> 添加 UserSchema.pre 确保在注册或者更新用户并保存在数据库之前将password进行hash
=> 添加了 instance method createJWT 对 password 进行 jwt 加密


Error handling:
class CustomAPIError extends Error {
    constructor(message) {
        super(message);
    }
}
=> And we have BadRequestError, NotFoundError extends CustomAPIError, 并且可以自己定义 error message


https://kb.objectrocket.com/mongo-db/how-to-add-instance-methods-with-mongoose-236